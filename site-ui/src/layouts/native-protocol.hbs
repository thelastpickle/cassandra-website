<!DOCTYPE html>
<html lang="en">
<head>
    {{> head-first}}
    <title>Apache Cassandra{{#with site.title}} | {{this}}{{/with}}</title>
    {{#with (canonical-url)}}
        <link rel="canonical" href="{{this}}">
        <link href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,400;0,700;1,400&amp;family=Red+Hat+Display:ital,wght@0,400;0,500;0,700;1,400;1,500&amp;display=swap"
              rel="stylesheet">
    {{/with}}
    {{> head-last}}
</head>
<body class="{{ page.layout }} {{ page.role }}">
<div class="container mx-auto relative">
    {{> header }}
    <div class="hero hero--home grad">
        <div class="eye"></div>
        <div id="home-content" class="text-center flex flex-center flex-column relative z2 ma-xlarge">
            <h1>{{ page.title }}</h1>
        </div>
    </div>
    <div class="flex-center py-large arrow">
        <div class="inner inner--narrow">
        </div>
    </div>
    {{> footer}}
</div>
</body>
<script>
    jQuery(function () {
        jQuery(document)
                .on('click', '.cassandra-cloud h3', function () {
                    let el = jQuery(this);
                    el.toggleClass('active');
                    el.next().slideToggle();
                })
                .on('click', '.image-expand img', function () {
                    $(this).clone().appendTo('#mod-content');
                    $('#fade,#modal,#close-modal').fadeIn();
                    $('body,html').addClass('no-scroll');
                })
                .on('click', '#fade,#close-modal', function () {
                    $('#fade,#modal,#close-modal').fadeOut();
                    $('body,html').removeClass('no-scroll');
                    $('#mod-content').html('');
                });
    });

    function generateHtmlElements(files) {
        const outerContainer = document.querySelector('.flex-center.py-large.arrow > .inner.inner--narrow');

        files.forEach(file => {
            const match = file.match(/native_protocol_v(\d+)\.html/);
            if (match) {
                const version = match[1];

                const sectionDiv = document.createElement('div');
                sectionDiv.className = 'sect1';

                const h2 = document.createElement('h2');
                h2.id = `native-protocol-version-${version}`;

                const anchor = document.createElement('a');
                anchor.className = 'anchor';
                anchor.href = `#native-protocol-version-${version}`;

                h2.appendChild(anchor);
                h2.appendChild(document.createTextNode(`Native Protocol Version ${version}`));

                const sectionBodyDiv = document.createElement('div');
                sectionBodyDiv.className = 'sectionbody';

                const contentDiv = document.createElement('div');
                contentDiv.id = `contentv${version}`;
                contentDiv.className = 'doc-container';

                const iframe = document.createElement('iframe');
                iframe.id = `iframev${version}`;
                iframe.src = file;
                iframe.style.display = 'none';

                sectionBodyDiv.appendChild(contentDiv);
                sectionBodyDiv.appendChild(iframe);

                sectionDiv.appendChild(h2);
                sectionDiv.appendChild(sectionBodyDiv);

                outerContainer.appendChild(sectionDiv);
            }
        });
    }

    function copyBodyContent(iframeId, contentId) {
        let iframe = document.getElementById(iframeId);
        let iframeDocument = iframe.contentDocument || iframe.contentWindow.document;

        let navElement = iframeDocument.querySelector('nav.top');
        if (navElement) {
            navElement.remove();
        }
        let preElements = iframeDocument.querySelectorAll('pre');
        preElements.forEach(function (preElement) {
            if (!preElement.textContent.trim()) {
                preElement.remove();
            }
        });
        // Remove license part
        preElements = iframeDocument.querySelectorAll('pre');
        preElements[0].remove();
        let h1Elements = iframeDocument.querySelectorAll('h1');
        h1Elements.forEach(function (h1Element) {
            h1Element.remove();
        });

        document.getElementById(contentId).innerHTML = iframeDocument.body.innerHTML;
    }

    function setNavigation() {
        let containers = document.querySelectorAll('.doc-container');

        containers.forEach(function (container) {
            let navLinks = container.querySelectorAll('nav a, pre a');

            navLinks.forEach(function (link) {
                link.addEventListener('click', function (event) {

                    event.preventDefault();
                    let section = link.getAttribute('href').replace("#", '');

                    let targetSection = container.querySelector('h2[id="' + section + '"]') || container.querySelector('h3[id="' + section + '"]') || container.querySelector('h4[id="' + section + '"]') || container.querySelector('h5[id="' + section + '"]');

                    if (targetSection) {
                        targetSection.scrollIntoView({behavior: 'smooth'});
                    }
                });
            });
        });
    }

    function copyBodyAndSetNavigationAfterLoad(files) {
        let loadedIframes = 0;
        const totalIframes = files.length;

        files.forEach(file => {
            const match = file.match(/native_protocol_v(\d+)\.html/);
            if (match) {
                const version = match[1];
                const iframe = document.getElementById(`iframev${version}`);
                iframe.onload = function () {
                    loadedIframes++;
                    copyBodyContent(`iframev${version}`, `contentv${version}`);
                    if (loadedIframes === totalIframes) {
                        setNavigation();
                    }
                };
            }
        });
    }

    const files = [
        '../_attachments/native_protocol_v3.html',
        '../_attachments/native_protocol_v4.html',
        '../_attachments/native_protocol_v5.html',
    ];

    window.onload = function () {
        generateHtmlElements(files);
        copyBodyAndSetNavigationAfterLoad(files);
    }
</script>
</html>
